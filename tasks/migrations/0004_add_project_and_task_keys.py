# Generated by Django 4.2.24 on 2025-09-17 22:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.functions.text
import tasks.models.project


def create_default_project_and_update_tasks(apps, schema_editor):
    """Create a default project and assign all existing tasks to it."""
    Project = apps.get_model('tasks', 'Project')
    Task = apps.get_model('tasks', 'Task')
    
    # Create a default project
    default_project = Project.objects.create(
        code='TSK',
        name='Default Project',
        description='Default project for existing tasks',
        is_active=True
    )
    
    # Update all existing tasks to use the default project and generate keys
    tasks = Task.objects.all()
    for i, task in enumerate(tasks, 1):
        task.project = default_project
        task.key = f'TSK-{i}'
        task.save()


def reverse_project_migration(apps, schema_editor):
    """Reverse the project migration by removing the default project."""
    Project = apps.get_model('tasks', 'Project')
    Project.objects.filter(code='TSK').delete()


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tasks', '0003_optimize_database_performance'),
    ]

    operations = [
        # First, create the Project model
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text="3-character project code (e.g., 'PRJ', 'API', 'WEB')", max_length=3, unique=True, validators=[tasks.models.project.validate_project_code])),
                ('name', models.CharField(help_text='Full project name', max_length=100, validators=[tasks.models.project.validate_project_name])),
                ('description', models.TextField(blank=True, help_text='Optional project description')),
                ('is_active', models.BooleanField(default=True, help_text='Whether the project is active and accepting new tasks')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(blank=True, help_text='Project owner/manager', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owned_projects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['code'],
            },
        ),
        
        # Add indexes for Project
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['code'], name='tasks_proje_code_df4a27_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['is_active'], name='tasks_proje_is_acti_1beff5_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['-created_at'], name='tasks_proje_created_127663_idx'),
        ),
        migrations.AddConstraint(
            model_name='project',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Upper('code'), name='unique_project_code_case_insensitive'),
        ),
        
        # Remove old indexes that we're replacing
        migrations.RemoveIndex(
            model_name='task',
            name='tasks_task_title_idx',
        ),
        migrations.RemoveIndex(
            model_name='task',
            name='tasks_task_description_idx',
        ),
        
        # Add key field to Task (nullable first)
        migrations.AddField(
            model_name='task',
            name='key',
            field=models.CharField(editable=False, help_text="Auto-generated task key (e.g., 'PRJ-123')", max_length=20, null=True, blank=True),
        ),
        
        # Add project field to Task (nullable first)
        migrations.AddField(
            model_name='task',
            name='project',
            field=models.ForeignKey(help_text='Project this task belongs to', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='tasks.project'),
        ),
        
        # Run data migration to create default project and update tasks
        migrations.RunPython(
            create_default_project_and_update_tasks,
            reverse_project_migration
        ),
        
        # Now make the fields non-nullable
        migrations.AlterField(
            model_name='task',
            name='key',
            field=models.CharField(editable=False, help_text="Auto-generated task key (e.g., 'PRJ-123')", max_length=20, unique=True),
        ),
        migrations.AlterField(
            model_name='task',
            name='project',
            field=models.ForeignKey(help_text='Project this task belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='tasks.project'),
        ),
        
        # Add indexes for Task
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['key'], name='tasks_task_key_4ed8f8_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['project'], name='tasks_task_project_4035b9_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['project', '-created_at'], name='tasks_task_project_782cbf_idx'),
        ),
        migrations.AddConstraint(
            model_name='task',
            constraint=models.UniqueConstraint(fields=('key',), name='unique_task_key'),
        ),
    ]